{"ast":null,"code":"var _jsxFileName = \"/home/charles/React_JS_Reference/08-03-21/newExcelsior/excelsior/src/layout/nav/NavIconMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MENU_BEHAVIOUR } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { settingsChangeColor } from 'settings/settingsSlice';\nimport IconMenuNotifications from './notifications/Notifications';\nimport SearchModal from './search/SearchModal';\nimport { menuChangeBehaviour } from './main-menu/menuSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavIconMenu = () => {\n  _s();\n\n  const {\n    pinButtonEnable,\n    behaviour\n  } = useSelector(state => state.menu);\n  const {\n    color\n  } = useSelector(state => state.settings);\n  const dispatch = useDispatch();\n\n  const onPinButtonClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (pinButtonEnable) {\n      dispatch(menuChangeBehaviour(behaviour === MENU_BEHAVIOUR.Pinned ? MENU_BEHAVIOUR.Unpinned : MENU_BEHAVIOUR.Pinned));\n    }\n\n    return false;\n  };\n\n  const onDisabledPinButtonClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const onLightDarkModeClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(settingsChangeColor(color.includes('light') ? color.replace('light', 'dark') : color.replace('dark', 'light')));\n  };\n\n  const [showSearchModal, setShowSearchModal] = useState(false);\n\n  const onSearchIconClick = e => {\n    e.preventDefault();\n    setShowSearchModal(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled list-inline text-center menu-icons\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-inline-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#/\",\n          id: \"colorButton\",\n          onClick: onLightDarkModeClick,\n          children: [/*#__PURE__*/_jsxDEV(CsLineIcons, {\n            icon: \"light-on\",\n            size: \"18\",\n            className: \"light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CsLineIcons, {\n            icon: \"light-off\",\n            size: \"18\",\n            className: \"dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchModal, {\n      show: showSearchModal,\n      setShow: setShowSearchModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NavIconMenu, \"0XkQ6w2sCXGaGVJxb/6/0NSCkqg=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = NavIconMenu;\nexport default _c2 = /*#__PURE__*/React.memo(NavIconMenu);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavIconMenu\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/charles/React_JS_Reference/08-03-21/newExcelsior/excelsior/src/layout/nav/NavIconMenu.js"],"names":["React","useState","classNames","useDispatch","useSelector","MENU_BEHAVIOUR","CsLineIcons","settingsChangeColor","IconMenuNotifications","SearchModal","menuChangeBehaviour","NavIconMenu","pinButtonEnable","behaviour","state","menu","color","settings","dispatch","onPinButtonClick","e","preventDefault","stopPropagation","Pinned","Unpinned","onDisabledPinButtonClick","onLightDarkModeClick","includes","replace","showSearchModal","setShowSearchModal","onSearchIconClick","memo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MENU_BEHAVIOUR } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { settingsChangeColor } from 'settings/settingsSlice';\nimport IconMenuNotifications from './notifications/Notifications';\nimport SearchModal from './search/SearchModal';\nimport { menuChangeBehaviour } from './main-menu/menuSlice';\n\nconst NavIconMenu = () => {\n  const { pinButtonEnable, behaviour } = useSelector((state) => state.menu);\n  const { color } = useSelector((state) => state.settings);\n  const dispatch = useDispatch();\n\n  const onPinButtonClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (pinButtonEnable) {\n      dispatch(menuChangeBehaviour(behaviour === MENU_BEHAVIOUR.Pinned ? MENU_BEHAVIOUR.Unpinned : MENU_BEHAVIOUR.Pinned));\n    }\n    return false;\n  };\n  const onDisabledPinButtonClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const onLightDarkModeClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(settingsChangeColor(color.includes('light') ? color.replace('light', 'dark') : color.replace('dark', 'light')));\n  };\n  const [showSearchModal, setShowSearchModal] = useState(false);\n\n  const onSearchIconClick = (e) => {\n    e.preventDefault();\n    setShowSearchModal(true);\n  };\n\n  return (\n    <>\n      <ul className=\"list-unstyled list-inline text-center menu-icons\">\n        {/* <li className=\"list-inline-item\">\n          <a href=\"#/\" onClick={onSearchIconClick}>\n            <CsLineIcons icon=\"search\" size=\"18\" />\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a\n            href=\"#/\"\n            id=\"pinButton\"\n            onClick={pinButtonEnable ? onPinButtonClick : onDisabledPinButtonClick}\n            className={classNames('pin-button', { disabled: !pinButtonEnable })}\n          >\n            <CsLineIcons icon=\"lock-on\" size=\"18\" className=\"unpin\" />\n            <CsLineIcons icon=\"lock-off\" size=\"18\" className=\"pin\" />\n          </a>\n        </li> */}\n        <li className=\"list-inline-item\">\n          <a href=\"#/\" id=\"colorButton\" onClick={onLightDarkModeClick}>\n            <CsLineIcons icon=\"light-on\" size=\"18\" className=\"light\" />\n            <CsLineIcons icon=\"light-off\" size=\"18\" className=\"dark\" />\n          </a>\n        </li>\n        {/* <IconMenuNotifications /> */}\n      </ul>\n      <SearchModal show={showSearchModal} setShow={setShowSearchModal} />\n    </>\n  );\n};\n\nexport default React.memo(NavIconMenu);\n"]},"metadata":{},"sourceType":"module"}